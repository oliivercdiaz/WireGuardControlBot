version: "3.8"

services:
  wireguard:
    image: linuxserver/wireguard
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-Europe/Madrid}
      - SERVERURL=${SERVERURL:-vpn.example.com}
      - SERVERPORT=${SERVERPORT:-51820}
      - PEERS=${PEERS:-oliver,pc,phone}
      - PEERDNS=${PEERDNS:-1.1.1.1}
      - INTERNAL_SUBNET=${INTERNAL_SUBNET:-10.119.153.0/24}
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv6.conf.all.disable_ipv6=0
      - net.ipv6.conf.all.forwarding=1
    volumes:
      - ./configs:/config
      - /lib/modules:/lib/modules:ro
    ports:
      - "${SERVERPORT:-51820}:${SERVERPORT:-51820}/udp"
    restart: unless-stopped

  bot:
    build: ./bot
    container_name: wireguardcontrolbot
    depends_on:
      - wireguard
    environment:
      # --- Telegram ---
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - AUTHORIZED_USERS=${AUTHORIZED_USERS}
      - ADMIN_CHAT_ID=${ADMIN_CHAT_ID}
      # --- WireGuard integration ---
      - WG_INTERFACE=wg0
      - WG_CONFIG_PATH=/config/wg_confs/wg0.conf
      - WG_CLIENTS_DIR=/config/wg_confs
      - WG_DOCKER_CONTAINER=wireguard
      - WG_MTU=1420
      - WG_CLIENT_DNS=1.1.1.1
      - WG_DEBUG_SCRIPT=/config/bin/wg-peer-debug.sh
      - PING_INTERVAL=600
      # --- Cloudflare optional ---
      - USE_CLOUDFLARE=${USE_CLOUDFLARE:-false}
      - CF_API_TOKEN=${CF_API_TOKEN:-}
      - CF_ZONE_ID=${CF_ZONE_ID:-}
      - CF_RECORD_NAME=${CF_RECORD_NAME:-}
    volumes:
      - ./configs:/config
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    # ðŸ‘‡ Importante para red estable y SSH funcional
    network_mode: "host"
    privileged: true
